.t add inteaea {set:version|0.1}
{set:codename|Pepper} *Inteaea v{get:version} Loaded | Codename: {get:codename} *

**Inteaea is coded with Python, and NotSoBot's Tag Scripting.**

*Output:
"{python:

# important modules
import random
import requests

userid = 0
if userid == 0:
    global globalusers
    globalusers +=1
    userid = globalusers
    print("Welcome to Inteaea! You are User#", userid, ".")

commandlist = ['help', 'welcome', 'fakeip', 'getipinfo', 'source']
if '{arg:0}' not in commandlist:
       print("Error; no such command. (.t inteaea help)")
else:
# commands
   if "{args}" == "welcome":
       print("Welcome to Inteaea! This is only the beginning friend. :D")
   if "{args}" == "fakeip":
        def generate_random_ip():
               return '.'.join(
              str(random.randint(0, 255)) for _ in range(4)
         )
        random_ip = generate_random_ip()
        ip_address = random_ip
        url = f'https://ipapi.co/' + ip_address + '/json/'
        response = requests.get(url).json()
        print(
"IP;", ip_address,
"| "
"City;", response.get("city"), 
"|", 
"Region;", response.get("region"), 
"|",
"Country;", response.get("country_name"),
"|",
"ORG;", response.get("org")
              )
if "{args}" == "help":
      for item in commandlist:
            print(item)
if "{args}" == "source":
    srclink = "https://raw.githubusercontent.com/auroraaawhatttt/inteaeaversion/refs/heads/main/inteaea"
    print("You can check the source here;", srclink)
if "{arg:0}" == "getipinfo":
        ip_address = "{arg:1}"
        url = f'https://ipapi.co/' + ip_address + '/json/'
        response = requests.get(url).json()
        city = response.get("city")
        region = response.get("region")
        country_name = response.get("country_name")
        org = response.get("org")

        if city == None or region == None or country_name == None or org == None
              print("uh oh")
        else:
              print(
                     "IP;", ip_address,
                     "| City;", city, 
                     "| Region;", region, 
                     "| Country;", country_name,
                     "| Org;", org   
       )
}"*```Inteaea {get:version}; {get:codename}```
{eval:{text:https://bit.ly/inteaea-versionchecker }}
